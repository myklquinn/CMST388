:root {
    --border: #777;
    --focus: #2196F3;
    --button: #c0d9ee;
    --arrow: var(--border);
}
  

body {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  margin: 0;
  padding: 0;
  font-family: Roboto, sans-serif;
  font-size: 14pt;
}

main {
  display: block;
  max-width: 800px;
  margin: 2em auto;
}

form {
  display: block;
  position: relative;
  margin: 0 auto;
  padding: 1em;
}

input, select {
  margin: 0.5rem;
  padding: 0.5rem;
  font-size: inherit;
  border-radius: 0.25em;
}

label, legend {
  margin: auto 0;
  font-weight: 700;
}

.groupLabel {
  font-weight: 700;
}

small {
  font-size: 0.75rem;
  font-weight: 500;
  font-style: italic;
}

.mainForm {
  display: -ms-grid;
  display: grid;
  -ms-grid-columns: 1fr 2fr;
      grid-template-columns: 1fr 2fr;
  gap: 0.5em;
}

.mainForm > div:not(.select):not(.choiceGp):not(.groupLabel):not(.phoneNumber)  {
    width: 100%;
    overflow: hidden;
    display: grid;
    grid-template-columns: 1fr;
}
.phoneNumber {
    display: inline-flex;
}

#zipcode, #areacode, #phone {
    text-align: center;
}
#zipcode {
    max-width: 6ch;
}
#areacode {
    max-width: 4ch;
}
#phone {
    max-width: 8ch;
}


.choiceGp {
  display: -ms-grid;
  display: grid;
  -ms-grid-columns: auto;
      grid-template-columns: auto;
}

[class^='choiceGp'] label {
  font-weight: 500;
}

input[type=radio], input[type=checkbox] {
  margin: 0.5em;
  padding: 0.5em;
}

.buttonArea {
  display: -ms-grid;
  display: grid;
  -ms-grid-columns: 2fr 1fr 1fr;
      grid-template-columns: 2fr 1fr 1fr;
  text-align: right;
}

input[type=submit], input[type=reset] {
  padding: 0.5em;
  background-color: var(--button);
  border: 1px solid #ccc;
  font-weight: 600;
  -webkit-box-align: end;
      -ms-flex-align: end;
          align-items: flex-end;
}

input[type=submit]:hover,
input[type=submit]:focus,
input[type=reset]:hover,
input[type=reset]:focus {
    box-shadow: 0 0 5px var(--focus);
    border: 2px solid var(--focus)
}

textarea:focus, input:focus{
    outline: none;
    border: 2px solid var(--focus)
}

/* The container */
.container {
  display: block;
  position: relative;
  padding-left: 35px;
  margin-bottom: 12px;
  cursor: pointer;
  font-size: 22px;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

/* Hide the browser's default radio button */
.container input {
  position: absolute;
  opacity: 0;
  cursor: pointer;
}

/* Create a custom radio button */
.checkmark {
  position: absolute;
  top: 0;
  left: 0;
  height: 25px;
  width: 25px;
  background-color: #eee;
  border-radius: 50%;
}

/* On mouse-over, add a grey background color */
.container:hover input ~ .checkmark {
  background-color: #ccc;
}

/* When the radio button is checked, add a blue background */
.container input:checked ~ .checkmark {
  background-color: var(--focus);
}

/* Create the indicator (the dot/circle - hidden when not checked) */
.checkmark:after {
  content: "";
  position: absolute;
  display: none;
}

/* Show the indicator (dot/circle) when checked */
.container input:checked ~ .checkmark:after {
  display: block;
}

/* Style the indicator (dot/circle) */
.container .checkmark:after {
  top: 9px;
  left: 9px;
  width: 8px;
  height: 8px;
  border-radius: 50%;
  background: white;
}

.container2 {
  display: block;
  position: relative;
  padding-left: 35px;
  margin-bottom: 12px;
  cursor: pointer;
  font-size: 22px;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

/* Hide the browser's default checkbox */
.container2 input {
  position: absolute;
  opacity: 0;
  cursor: pointer;
  height: 0;
  width: 0;
}

/* Create a custom checkbox */
.checkmark2 {
  position: absolute;
  top: 0;
  left: 0;
  height: 25px;
  width: 25px;
  background-color: #eee;
}

/* On mouse-over, add a grey background color */
.container2:hover input ~ .checkmark2 {
  background-color: var(--border);
}

/* When the checkbox is checked, add a blue background */
.container2 input:checked ~ .checkmark2 {
  background-color: var(--focus);
}

/* Create the checkmark2/indicator (hidden when not checked) */
.checkmark2:after {
  content: "";
  position: absolute;
  display: none;
}

/* Show the checkmark2 when checked */
.container2 input:checked ~ .checkmark2:after {
  display: block;
}

/* Style the checkmark2/indicator */
.container2 .checkmark2:after {
  left: 9px;
  top: 5px;
  width: 5px;
  height: 10px;
  border: solid white;
  border-width: 0 3px 3px 0;
  -webkit-transform: rotate(45deg);
  transform: rotate(45deg);
}

select {
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  background-color: transparent;
  border: none;
  padding: 0 1em 0 0;
  margin: 0;
  width: 100%;
  font-family: inherit;
  font-size: inherit;
  cursor: inherit;
  line-height: inherit;
  z-index: 1;
  outline: none;
}
select::-ms-expand {
  display: none;
}

.select {
  display: grid;
  grid-template-areas: "select";
  align-items: center;
  position: relative;
  border: 1px solid var(--border);
  border-radius: 0.25em;
  padding: 0.5em 0.5em;
  margin: 0.35rem;
  font-size: 1.25rem;
  cursor: pointer;
  line-height: 1.1;
  background-color: #fff;
  background-image: linear-gradient(to top, #f9f9f9, #fff 33%);
}
.select select, .select::after {
  grid-area: select;
}
.select:not(.select--multiple)::after {
  content: "";
  justify-self: end;
  width: 0.8em;
  height: 0.5em;
  background-color: var(--arrow);
  -webkit-clip-path: polygon(100% 0%, 0 0%, 50% 100%);
          clip-path: polygon(100% 0%, 0 0%, 50% 100%);
}

select:focus + .focus {
  position: absolute;
  top: -1px;
  left: -1px;
  right: -1px;
  bottom: -1px;
  border: 2px solid var(--focus);
  border-radius: inherit;
}

select[multiple] {
  padding-right: 0;
  height: 6rem;
}
.select + label {
  margin-top: 2rem;
}

.validationError {
    position: relative;
    display: flex;
    flex-flow: column;
}
.validationError input, .validationError .select {
    border: 2px solid red;
    background: rgba(255, 0, 0, 0.3);
    max-width: 100%;
}

.validationError:focus-within > input {
    border: 2px solid var(--focus);
}

.errorMessage {
    color: red;
    font-style: italic;
    font-size: 0.75rem;
    margin: 0 0.5em;
}

.thankYouPage {
    position: relative;
    font-size: 24pt;
    text-align: center;
    margin: 0;
    height: 100%;
    min-height: 100%;
    width: 100%;
    max-width: 100vw;
    max-height: 100vh;
}

.thankYouPage * {
    height: 100%;
}